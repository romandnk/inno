openapi: 3.0.1
info:
  version: 1.0.0
  title: User Authentication API
  description: API for user registration and login

paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
      responses:
        '201':
          description: User successfully registered
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/RegisterUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /login:
    post:
      summary: Login a user
      parameters:
        - in: header
          name: User-Agent
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRequest'
      responses:
        '200':
          description: User successfully loggedin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /refreshTokens:
    post:
      summary: Refresh access and refresh tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokensRequest'
      responses:
        '200':
          description: Tokens successfully refreshed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /buildinfo:
    get:
      summary: Get build information
      responses:
        '200':
          description: Build information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildInfo'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


components:
  schemas:
    RegisterUserRequest:
      type: object
      properties:
        email:
          type: string
          description: Email of the new user
        password:
          type: string
          description: Password of the new user
        age:
          type: integer
      required:
        - email
        - password

    LoginUserRequest:
      type: object
      properties:
        email:
          type: string
          description: Email of the existing user
        password:
          type: string
          description: Password of the existing user
      required:
        - email
        - password

    RefreshTokensRequest:
      type: object
      properties:
        fingerprint:
          type: string
        refreshToken:
          type: string
      required:
        - fingerprint
        - refreshToken
    
    RegisterUserResponse:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the registered user
        email:
          type: string
          description: Email of the newly registered user
      required:
        - id
        - email

    LoginUserResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: JWT token for accessing protected routes
        refreshToken:
          type: string
          description: JWT token for updating access token
      required:
        - accessToken
        - refreshToken
    
    BuildInfo:
      type: object
      properties:
        version:
          type: string
          description: Version of the build
        commit_hash:
          type: string
          description: Commit hash of the source code
        build_date:
          type: string
          description: Date of the build
        go_version:
          type: string
          description: Go programming language version used for the build
        os:
          type: string
          description: Operating system used for the build
        arch:
          type: string
          description: Architecture of the machine used for the build
        compiler:
          type: string
          description: Compiler used for the build
      required:
        - version
        - commit_hash
        - build_date
        - go_version
        - os
        - arch
        - compiler

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Description of the error
      required:
        - error