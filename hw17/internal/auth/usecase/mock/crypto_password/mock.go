// Code generated by MockGen. DO NOT EDIT.
// Source: usecase.go
//
// Generated by this command:
//
//	mockgen -source usecase.go -destination mock/crypto_password/mock.go -package cryptopasswordmock -exclude_interfaces UserRepository,TokenRepository,JWTManager CryptoPassword
//
// Package cryptopasswordmock is a generated GoMock package.
package cryptopasswordmock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCryptoPassword is a mock of CryptoPassword interface.
type MockCryptoPassword struct {
	ctrl     *gomock.Controller
	recorder *MockCryptoPasswordMockRecorder
}

// MockCryptoPasswordMockRecorder is the mock recorder for MockCryptoPassword.
type MockCryptoPasswordMockRecorder struct {
	mock *MockCryptoPassword
}

// NewMockCryptoPassword creates a new mock instance.
func NewMockCryptoPassword(ctrl *gomock.Controller) *MockCryptoPassword {
	mock := &MockCryptoPassword{ctrl: ctrl}
	mock.recorder = &MockCryptoPasswordMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCryptoPassword) EXPECT() *MockCryptoPasswordMockRecorder {
	return m.recorder
}

// ComparePasswords mocks base method.
func (m *MockCryptoPassword) ComparePasswords(fromUser, fromDB string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComparePasswords", fromUser, fromDB)
	ret0, _ := ret[0].(bool)
	return ret0
}

// ComparePasswords indicates an expected call of ComparePasswords.
func (mr *MockCryptoPasswordMockRecorder) ComparePasswords(fromUser, fromDB any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComparePasswords", reflect.TypeOf((*MockCryptoPassword)(nil).ComparePasswords), fromUser, fromDB)
}

// HashPassword mocks base method.
func (m *MockCryptoPassword) HashPassword(password string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HashPassword", password)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HashPassword indicates an expected call of HashPassword.
func (mr *MockCryptoPasswordMockRecorder) HashPassword(password any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HashPassword", reflect.TypeOf((*MockCryptoPassword)(nil).HashPassword), password)
}
